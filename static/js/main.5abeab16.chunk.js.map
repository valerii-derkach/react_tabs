{"version":3,"sources":["Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selector","selectedTabId","selectedTab","findTabByID","className","map","tab","classNames","id","type","onClick","title","value","max","content","tabId","find","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8LAWaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SACAC,EACI,EADJA,cAEMC,EAAcC,EAAYF,IAAkBF,EAAK,GAEvD,OACE,0BAASK,UAAU,MAAnB,UACE,sBACEA,UAAU,yCADZ,UAMGL,EAAKM,KAAI,SAAAC,GAAG,OACX,wBAEEF,UAAWG,IAAW,SAAU,CAC9B,cAAeD,EAAIE,KAAOP,EAC1B,UAAWK,EAAIE,KAAOP,IAExBQ,KAAK,SACLC,QAAS,WACHT,IAAkBK,EAAIE,IACxBR,EAASM,EAAIE,KATnB,SAaGF,EAAIK,OAZAL,EAAIE,OAeb,0BACEJ,UAAU,6BAIVQ,MAAM,IACNC,IAAI,SAGR,mBACET,UAAU,gBACV,UAAQ,cAFV,SAIGF,EAAYY,cClDRf,G,MAAc,CACzB,CAAES,GAAI,QAASG,MAAO,QAASG,QAAS,eACxC,CAAEN,GAAI,QAASG,MAAO,QAASG,QAAS,eACxC,CAAEN,GAAI,QAASG,MAAO,QAASG,QAAS,iBAG7BX,EAAc,SAACY,GAC1B,OAAOhB,EAAKiB,MAAK,SAAAV,GAAG,OAAIA,EAAIE,KAAOO,MAAU,MAgChCE,EA7BO,WACpB,MAA0CC,mBAASnB,EAAK,GAAGS,IAA3D,mBAAOP,EAAP,KAAsBkB,EAAtB,KAMMjB,EAAcC,EAAYF,IAAkBF,EAAK,GAEvD,OACE,uBACEK,UAAU,4CADZ,UAME,oBAAIA,UAAU,aAAd,mCACsBF,EAAYS,SAGlC,cAAC,EAAD,CACEZ,KAAMA,EACNC,SAnBgB,SAACQ,GACrBW,EAAiBX,IAmBbP,cAAeA,Q,MCnCvBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5abeab16.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n// eslint-disable-next-line import/no-cycle\nimport { findTabByID } from './App';\n\ninterface Props {\n  tabs: Tab[],\n  selector: (id: string) => void,\n  selectedTabId: string,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selector,\n  selectedTabId,\n}) => {\n  const selectedTab = findTabByID(selectedTabId) || tabs[0];\n\n  return (\n    <section className=\"box\">\n      <div\n        className=\"\n          buttons\n          is-flex\n          is-flex-direction-row\"\n      >\n        {tabs.map(tab => (\n          <button\n            key={tab.id}\n            className={classNames('button', {\n              'is-outlined': tab.id !== selectedTabId,\n              'is-link': tab.id === selectedTabId,\n            })}\n            type=\"button\"\n            onClick={() => {\n              if (selectedTabId !== tab.id) {\n                selector(tab.id);\n              }\n            }}\n          >\n            {tab.title}\n          </button>\n        ))}\n        <progress\n          className=\"\n            progress\n            is-link\n            is-small\"\n          value=\"1\"\n          max=\"1\"\n        />\n      </div>\n      <p\n        className=\"subtitle is-3\"\n        data-cy=\"tab-content\"\n      >\n        {selectedTab.content}\n      </p>\n    </section>\n  );\n};\n","import React, { useState } from 'react';\n// eslint-disable-next-line import/no-cycle\nimport { Tabs } from './Tabs';\n\nimport './App.scss';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const findTabByID = (tabId: string): Tab | null => {\n  return tabs.find(tab => tab.id === tabId) || null;\n};\n\nconst App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (id: string) => {\n    setSelectedTabId(id);\n  };\n\n  const selectedTab = findTabByID(selectedTabId) || tabs[0];\n\n  return (\n    <main\n      className=\"\n       App box\n       is-flex\n       is-flex-direction-column\"\n    >\n      <h1 className=\"title is-2\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selector={onTabSelected}\n        selectedTabId={selectedTabId}\n      />\n    </main>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}